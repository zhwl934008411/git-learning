标签管理:
标签也是版本库的一个快照。其实它就是指向某个commit的指针


git tag tagname commitId 

git tag

git show tagname

git tag -a v0.9 -m "version 0.9 released" 37737

git log --pretty=oneline --abbrev-commit 列出commitId+commit message

git push origin v1.0

git push origin --tags

git push origin :refs/tags/v1.0

git remote rm origin

git config --global color.ui true 让git显示颜色

vim ~/.gitconfig

创建.gitignore文件,将不需要进行版本控制的文件放在这里
忽略文件的原则是：
    忽略操作系统自动生成的文件，比如缩略图等；
    忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；
    忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。
# Windows:
Thumbs.db
ehthumbs.db
Desktop.ini

# Python:
*.py[cod]
*.so
*.egg
*.egg-info
dist
build

# My configurations:
db.ini
deploy_key_rsa


git config --global alias.st status
当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中：
每个仓库的Git配置文件都放在.git/config文件中：



Git忽略规则及.gitignore规则不生效的解决办法
git rm -r --cached .
git add .
git commit -m ".gitignore is now working"




